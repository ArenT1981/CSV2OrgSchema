// Filename: WriteApexSchema.java
// Author: Aren Tyr (aren.unix@yandex.com)
// Date: 2020-10-19
// Version: 0.2
//
// =============================================================================
//
// Class responsible for dynamically generating the Salesforce Apex code that 
// uses the metadata API to programmatically generate the Salesforce objects + 
// fields.
//
// =============================================================================
package com.csv2orgschema;

import java.util.List;
import java.util.Set;
import java.util.HashSet;

import java.io.File;
import java.io.PrintWriter;
import java.io.IOException;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;


public class WriteApexSchema
{
    private PrintWriter writer;
    private List<OrgSchemaItem> schema;
    private DateTimeFormatter yearDay;
    private DateTimeFormatter yearDayTime;
    
    private String currentDate;
    private String currentDateTime;

    public WriteApexSchema(List<OrgSchemaItem> orgSchema)
    {
        LocalDateTime instance = LocalDateTime.now();
        schema = orgSchema;
        yearDay = DateTimeFormatter.ofPattern("yyyy_MM_dd");
        yearDayTime = DateTimeFormatter.ofPattern("yyyy-MM-dd H:mm");
        
        currentDate = (yearDay.format(instance)).toString();
        currentDateTime = (yearDayTime.format(instance)).toString();
        
    }

    public boolean createFileHeader()
    {
        writer.println("// |=================================================================================|");
        writer.println("// |                                                                                 |");
        writer.println("// |   ____ ______     ______                 ____       _                           |");
        writer.println("// |  / ___/ ___\\ \\   / /___ \\ ___  _ __ __ _/ ___|  ___| |__   ___ _ __ ___   __ _  |");
        writer.println("// |  | |   \\___ \\ \\ / /  __) / _ \\| '__/ _` \\___ \\ / __| '_ \\ / _ \\ '_ ` _ \\ / _` | |");
        writer.println("// |  | |___ ___) \\ V /  / __/ (_) | | | (_| |___) | (__| | | |  __/ | | | | | (_| | |");
        writer.println("// |  \\____|____/  \\_/  |_____\\___/|_|  \\__, |____/ \\___|_| |_|\\___|_| |_| |_|\\__,_| |");
        writer.println("// |                                                                                 |");
        writer.println("// ==================================================================================|");
        writer.println("//");
        writer.println("// Filename: CreateCustomObjects_" + currentDate + ".cls");
        writer.println("// Date: " + currentDateTime);
        writer.println("// Auto-generated by CSV2orgSchema by Aren Tyr (aren.unix@yandex.com)");
        writer.println("//");
        writer.println("// This code will completely create/regenerate the specified object schema in Salesforce.");
        writer.println("// Schema is generated based on an input CSV file in the correct format.");
        writer.println("//");
        writer.println("// Method list:");
        writer.println("// 1. Many generate<Type>Field(<args>) for creating the fields.");
        writer.println("// 2. createApexObjects() for initialising the custom objects.");
        writer.println("// 3. createApexObjectFields() for setting up the fields on these objects.");
        writer.println("// 4. setFieldPermissions() for making all of the fields read-only & visible by default.");
        writer.println("// 5. Three helper methods for pushing the calls through the MetadataService.");
        writer.println("");

        // Begin actual code. Allman style braces :-)
        writer.println("public class CreateCustomObjects_" + currentDate);
        writer.println("{");
        writer.println("");
        writer.println("    // ======== [ Object & Field creation methods ] =========");
        writer.println("");

        return true;
    }

    // Write out all of the helper/generator functions
    public boolean createServiceAndGeneratorFns()
    {
        writer.println("    // Open a connection to the metadata service port");
        writer.println("    public static MetadataService.MetadataPort createService()");
        writer.println("    {");
        writer.println("        MetadataService.MetadataPort service = new MetadataService.MetadataPort();");
        writer.println("        service.SessionHeader = new MetadataService.SessionHeader_element();");
        writer.println("        service.SessionHeader.sessionId = UserInfo.getSessionId();");
        writer.println("        return service;");
        writer.println("    }");
        writer.println("");
        writer.println("    // Wrapper/helper methods to create fields");
        writer.println("    public static MetadataService.CustomField generateLongTextAreaField(String apiName, String fieldLabel,");
        writer.println("                  String fieldDescription, Integer txtLength, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'LongTextArea';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.length = txtLength;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateTextAreaField(String apiName, String fieldLabel,");
        writer.println("                  String fieldDescription, Boolean req, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'TextArea';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateTextField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Integer txtLength, Boolean req, Boolean uniq,");
        writer.println("                      Boolean caseSens, Boolean extId, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Text';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.length = txtLength;");
        writer.println("        field.required = req;");
        writer.println("        field.unique = uniq;");
        writer.println("        field.casesensitive = caseSens;");
        writer.println("        field.externalId = extID;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateNumberField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, Boolean uniq, Boolean extId,");
        writer.println("                      String defValue, Integer precInt, Integer scaInt)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Number';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.unique = uniq;");
        writer.println("        field.externalId = extId;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("        field.precision = precInt;");
        writer.println("        field.scale = scaInt;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateAutoNumberField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, Boolean extId)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'AutoNumber';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.externalId = extId;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generatePercentField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String defValue, Integer precInt, Integer scaInt)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Percent';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("        field.precision = precInt;");
        writer.println("        field.scale = scaInt;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generatePhoneField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Phone';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    // FIXME: Needs valueSet CustomValue instead? Poorly documented...");
        writer.println("    /*public static MetadataService.CustomField generatePicklistField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String phoneNum, String phType, Integer scaInt)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Phone';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("        field.phoneNumber = phoneNum;");
        writer.println("        field.phoneType = phType; ");
        writer.println("");
        writer.println("        return field;");
        writer.println("    } */");
        writer.println("");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateCheckboxField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Checkbox';");
        writer.println("        field.description = fieldDescription;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateCurrencyField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Currency';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateFormulaField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, Boolean uniq, Integer precInt, Integer scaInt,");
        writer.println("                      Boolean treatBlanksAsZero)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Formula';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.unique = uniq;");
        writer.println("        field.precision = precInt;");
        writer.println("        field.scale = scaInt;");
        writer.println("");
        writer.println("        if(treatBlanksAsZero == true)");
        writer.println("        { field.formulaTreatBlanksAs = 'BlankAsZero'; }");
        writer.println("        else");
        writer.println("        { field.formulaTreatBlanksAs = 'BlankAsBlank'; }");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateDateField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Date';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateDateTimeField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'DateTime';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateTimeField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Time';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateURLField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'URL';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("    public static MetadataService.CustomField generateEmailField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, Boolean uniq, Boolean extId, String defValue)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Email';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.unique = uniq;");
        writer.println("        field.externalId = extId;");
        writer.println("        field.defaultValue = defValue;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateGeolocationField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, Boolean req, Integer scaInt)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.type_x = 'Location';");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.required = req;");
        writer.println("        field.scale = scaInt;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateExternalLookupField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, String relLabel, String relName, String pointingTo)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.relationshipLabel = relLabel;");
        writer.println("        field.relationshipName = relName;");
        writer.println("        field.type_x = 'ExternalLookup';");
        writer.println("        field.referenceTo = pointingTo;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateLookupField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, String relLabel, String relName, String pointingTo)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.relationshipLabel = relLabel;");
        writer.println("        field.relationshipName = relName;");
        writer.println("        field.type_x = 'Lookup';");
        writer.println("        field.referenceTo = pointingTo;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");
        writer.println("");
        writer.println("    public static MetadataService.CustomField generateMasterDetailField(String apiName, String fieldLabel,");
        writer.println("                      String fieldDescription, String relLabel, String relName, String pointingTo,");
        writer.println("                      Integer relOrder)");
        writer.println("    {");
        writer.println("        MetadataService.CustomField field = new MetadataService.CustomField();");
        writer.println("");
        writer.println("        field.fullName = apiName;");
        writer.println("        field.label = fieldLabel;");
        writer.println("        field.description = fieldDescription;");
        writer.println("        field.relationshipLabel = relLabel;");
        writer.println("        field.relationshipName = relName;");
        writer.println("        field.type_x = 'MasterDetail';");
        writer.println("        field.referenceTo = pointingTo;");
        writer.println("        field.relationshipOrder = relOrder;");
        writer.println("");
        writer.println("        return field;");
        writer.println("    }");

        return true;
    }

    // For handling generating the lists of items to insert in correct code format
    public boolean createUpserterCode(int insertCount, String entity)
    {
        writer.println("");
        writer.println("        // Do insert. Limited to 10 per transaction");

        int resultSet = 1;
        boolean initRun = true;

        // Breaking up the blocks of upsert/insert results mod 10
        for(int i = 0; i < (insertCount - 1); ++i)
        {
            int printNum = i + 1;
            if(i % 10 == 0 && i != insertCount)
            {
                if(initRun == false)
                {
                    writer.println("");
                    writer.println("        handleUpsertResults(results" + resultSet +"[0]);");
                    writer.println("");
                    resultSet++;
                }

                writer.println("        List<MetadataService.UpsertResult> results" + resultSet + " =");
                writer.println("            service.upsertMetadata(");
                writer.println("                    new MetadataService.Metadata[] {");

            }

            // Are we on the last line/block of ten?
            if((((i + 1) % 10) == 0) || ((i + 2 ) == insertCount))
            { writer.println("                                                     " + entity + printNum + " });"); }
            else
            { writer.println("                                                     " + entity + printNum + ","); }

            initRun = false;
        }

        writer.println("        handleUpsertResults(results" + resultSet +"[0]);");
        writer.println("");
        writer.println("    return true;");
        writer.println("    }");

        return true;
    }

    public boolean createRunCode()
    {
        writer.println("");
        writer.println("    // Driver method that runs the code");
        writer.println("    public static boolean doCreate()");
        writer.println("    {");
        writer.println("        Boolean createObjects = false;");
        writer.println("        Boolean createFields = false;");
        writer.println("        Boolean setFields = false;");
        writer.println("");
        writer.println("        createObjects = createApexObjects();");
        writer.println("        if(createObjects == true)");
        writer.println("        { createFields = createApexObjectFields(); }");
        writer.println("        if(createFields == true)");
        writer.println("        { setFields = setFieldPermissions(); }");
        writer.println("");
        writer.println("        if(createObjects == true && createFields == true && setFields == true)");
        writer.println("        { return true; }");
        writer.println("        else");
        writer.println("        { return false; }");
        writer.println("    }");

        return true;
    }

    public boolean createHandleUpsertCode()
    {
        writer.println("");
        writer.println("    // Upsert helper method from metadata API example file");
        writer.println("    public static void handleUpsertResults(MetadataService.UpsertResult upsertResult)");
        writer.println("    {");
        writer.println("        // Nothing to see?");
        writer.println("        if(upsertResult == null || upsertResult.success)");
        writer.println("           { return; }");
        writer.println("        // Construct error message and throw an exception");
        writer.println("        if(upsertResult.errors != null)");
        writer.println("        {");
        writer.println("            List<String> messages = new List<String>();");
        writer.println("            messages.add(");
        writer.println("                    (upsertResult.errors.size() == 1 ? 'Error ' : 'Errors ') +");
        writer.println("                    'occured processing component ' + upsertResult.fullName + '.');");
        writer.println("            for(MetadataService.Error error : upsertResult.errors)");
        writer.println("                messages.add(");
        writer.println("                        error.message + ' (' + error.statusCode + ').' +");
        writer.println("                        ( error.fields != null && error.fields.size() > 0 ?");
        writer.println("                          ' Fields ' + String.join(error.fields, ',') + '.' : '' ) );");
        writer.println("            if(messages.size() > 0)");
        writer.println("                { throw new MetadataServiceExamplesException(String.join(messages, ' ')); }");
        writer.println("        }");
        writer.println("        if(!upsertResult.success)");
        writer.println("            { throw new MetadataServiceExamplesException('Request failed with no specified error.'); }");
        writer.println("    }");

        return true;
    }

    public boolean createHandleSaveCode()
    {
        writer.println("");
        writer.println("    // Save result helper method from metadata API example file");
        writer.println("    public static void handleSaveResults(MetadataService.SaveResult saveResult)");
        writer.println("    {");
        writer.println("        // Nothing to see?");
        writer.println("        if(saveResult == null || saveResult.success)");
        writer.println("            { return; }");
        writer.println("        // Construct error message and throw an exception");
        writer.println("        if(saveResult.errors!=null)");
        writer.println("        {");
        writer.println("            List<String> messages = new List<String>();");
        writer.println("            messages.add(");
        writer.println("                    (saveResult.errors.size()==1 ? 'Error ' : 'Errors ') +");
        writer.println("                    'occured processing component ' + saveResult.fullName + '.');");
        writer.println("            for(MetadataService.Error error : saveResult.errors)");
        writer.println("                messages.add(");
        writer.println("                    error.message + ' (' + error.statusCode + ').' +");
        writer.println("                    ( error.fields!=null && error.fields.size()>0 ?");
        writer.println("                      ' Fields ' + String.join(error.fields, ',') + '.' : '' ) );");
        writer.println("            if(messages.size()>0)");
        writer.println("                { throw new MetadataServiceExamplesException(String.join(messages, ' ')); }");
        writer.println("        }");
        writer.println("    if(!saveResult.success)");
        writer.println("        { throw new MetadataServiceExamplesException('Request failed with no specified error.'); }");
        writer.println("}");

        return true;
    }

    public boolean createHandleDeleteCode()
    {
        writer.println("");
        writer.println("    // Delete helper method from metadata API example file");
        writer.println("    public static void handleDeleteResults(MetadataService.DeleteResult deleteResult)");
        writer.println("    {");
        writer.println("        // Nothing to see?");
        writer.println("        if(deleteResult == null || deleteResult.success)");
        writer.println("            { return; }");
        writer.println("        // Construct error message and throw an exception");
        writer.println("        if(deleteResult.errors != null)");
        writer.println("        {");
        writer.println("            List<String> messages = new List<String>();");
        writer.println("            messages.add(");
        writer.println("                    (deleteResult.errors.size() == 1 ? 'Error ' : 'Errors ') +");
        writer.println("                    'occured processing component ' + deleteResult.fullName + '.');");
        writer.println("            for(MetadataService.Error error : deleteResult.errors)");
        writer.println("                messages.add(");
        writer.println("                        error.message + ' (' + error.statusCode + ').' +");
        writer.println("                        ( error.fields != null && error.fields.size() > 0 ?");
        writer.println("                          ' Fields ' + String.join(error.fields, ',') + '.' : '' ) );");
        writer.println("            if(messages.size() > 0)");
        writer.println("                { throw new MetadataServiceExamplesException(String.join(messages, ' ')); }");
        writer.println("        }");
        writer.println("        if(!deleteResult.success)");
        writer.println("            { throw new MetadataServiceExamplesException('Request failed with no specified error.'); }");
        writer.println("    }");

        return true;
    }

    public boolean createGenericExceptionHandler()
    {
        writer.println("");
        writer.println("    // No specific exception handling code defined... Could catch it here if we");
        writer.println("    // have something we want to do...");
        writer.println("    public class MetadataServiceExamplesException extends Exception { }");

        return true;
    }

    public boolean createApexObjects(Set<OrgSchemaItem> objList)
    {
        // TODO: Gather sharingModel/deploymentStatus etc parameters for setting at some point
        writer.println("");
        writer.println("    // Create the sObjects to store the data in");
        writer.println("    public static boolean createApexObjects()");
        writer.println("    {");
        writer.println("        MetadataService.MetadataPort service = createService();");

        int objNumber = 1;
        for(OrgSchemaItem item : objList)
        {
            String trimmedName = item.getObjectAPIName().replace("__c", "");
            writer.println("");
            writer.println("        // " + objNumber + ". Create the " + item.getObjectAPIName() + " object");
            writer.println("        MetadataService.CustomObject customObject" + objNumber + " = new MetadataService.CustomObject();");
            writer.println("        customObject" + objNumber + ".fullName = '" + item.getObjectAPIName() +"';");
            writer.println("        customObject" + objNumber + ".label = '" + item.getObjectLabel() + "';");
            writer.println("        customObject" + objNumber + ".pluralLabel = '" + item.getObjectLabel() + "s';");
            writer.println("        customObject" + objNumber + ".nameField = new MetadataService.CustomField();");
            writer.println("        customObject" + objNumber + ".nameField.type_x = 'Text';");
            writer.println("        customObject" + objNumber + ".nameField.label = '" + trimmedName + "';");
            writer.println("        customObject" + objNumber + ".deploymentStatus = 'Deployed';");
            writer.println("        customObject" + objNumber + ".sharingModel = 'ReadWrite';");
            writer.println("        customObject" + objNumber + ".description = '" + item.getObjectDescription() + "';");
            writer.println("        System.debug('-> Inserting/updating: " + item.getObjectAPIName() + "');");

            objNumber++;
        }

        createUpserterCode(objNumber, "customObject");
        return true;

    }

    public boolean createApexFieldHeader()
    {
        writer.println("");
        writer.println("    // Create all of the custom fields");
        writer.println("    public static boolean createApexObjectFields()");
        writer.println("    {");
        writer.println("        MetadataService.MetadataPort service = createService();");
        writer.println("");

        return true;
    }

    public boolean createFieldSecurityCode(int fieldCount)
    {
        writer.println("");
        writer.println("    // Set field permissions across all fields");
        writer.println("    public static boolean setFieldPermissions()");
        writer.println("    {");
        writer.println("        MetadataService.MetadataPort service = createService();");
        writer.println("");
        writer.println("        // Create the admin profile object...");
        writer.println("        MetadataService.Profile admin = new MetadataService.Profile();");
        writer.println("        admin.fullName = 'Admin';");
        writer.println("        admin.custom = false;");
        writer.println("");
        writer.println("        // Create field security objects");

        int i;
        for(i = 1; i < fieldCount; ++i)
        {
            writer.println("        MetadataService.ProfileFieldLevelSecurity fieldSec" + i + " = new MetadataService.ProfileFieldLevelSecurity();");
        }

        i = 1;
        writer.println("");
        writer.println("        // Assign read-only field security permissions");
        for(OrgSchemaItem item : schema)
        {
            writer.println("        fieldSec" + i + ".field = '" + item.getObjectAPIName() + "." + item.getFieldAPIName() + "';");
            writer.println("        fieldSec" + i + ".editable = false;");
            writer.println("        fieldSec" + i + ".readable = true;");
            i++;

        }

        writer.println("");
        writer.println("        // Commit the field security settings");
        writer.println("        admin.fieldPermissions  = new MetadataService.ProfileFieldLevelSecurity[]");
        writer.println("        {");

        for(i = 1; i < (fieldCount - 1); ++i)
        {
            writer.println("            fieldSec" + i + ",");
        }

        writer.println("            fieldSec" + i);
        writer.println("        };");
        writer.println("");
        writer.println("        List<MetadataService.SaveResult> results =");
        writer.println("            service.updateMetadata(");
        writer.println("            new MetadataService.Metadata[] { admin });");
        writer.println("        handleSaveResults(results[0]);");
        writer.println("");
        writer.println("        return true;");
        writer.println("    }");

        return true;
    }

    public boolean generateApexSchemaCode()
    {
        try
        {
            writer = new PrintWriter(new File("CreateCustomObjects_" + currentDate + ".cls"));

            Set<String> objectNameSet = new HashSet<String>();
            Set<OrgSchemaItem> objectSet = new HashSet<OrgSchemaItem>();

            System.out.println("-----------------------------------------------------------------");

            // Build a stripped list of objects only. Ignore/do not add "Standard" SF objects
            for(OrgSchemaItem objectInstance : schema)
            {
                if(objectNameSet.contains(objectInstance.getObjectAPIName()) == false && 
                        SFStandardObjectList.isStandardObject(objectInstance.getObjectAPIName()) == false)
                {
                    objectNameSet.add(objectInstance.getObjectAPIName());
                    System.out.println("-> Adding custom object: " + objectInstance.getObjectAPIName());
                    objectSet.add(objectInstance);
                }
            }
            System.out.println("-----------------------------------------------------------------");

            createFileHeader();
            createServiceAndGeneratorFns();
            createApexObjects(objectSet);
            createApexFieldHeader();

            int fieldIndex = 1;

            // Now produce the field generation code
            for(OrgSchemaItem dfLine : schema)
            {
                // Determine the field type
                FieldType ft = dfLine.getFieldType();
                System.out.println("-> Adding field: " + dfLine.getFieldAPIName() + " on object " + dfLine.getObjectAPIName() + 
                        ", type " + dfLine.getFieldType() + ".");
                
                writer.println("        System.debug('-> Adding/updating field \"" + dfLine.getFieldAPIName() + 
                        "\" on object: " + dfLine.getObjectAPIName() + "');");

                switch(ft)
                {
                    case AUTO_NUMBER:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateAutoNumberField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", " + dfLine.getExternalID() + ");");
                        break;
                    case CHECKBOX:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateCheckboxField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + ");");
                        break;
                    case CURRENCY:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateCurrencyField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                    case DATETIME:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateDateTimeField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                    case DATE:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateDateField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                    case EMAIL:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateEmailField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", " + dfLine.getUnique() + ", " + dfLine.getExternalID() + ", '" +
                                dfLine.getDefaultValue() + "');");
                        break;
                    case EXT_LOOKUP:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateExternalLookupField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', '" +
                                dfLine.getRelationshipLabel() + "', '" + dfLine.getRelationshipName() + "', '" + dfLine.getReferenceTo() +
                                "');");
                        break;
                        //FIXME: implement blanks as zero/getter setter/read in from spreadsheet...
                        /*case FORMULA:
                          writer.println("        MetadataService.CustomField field" + fieldIndex +
                          " = generateFormulaField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                          "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                          dfLine.getRequired() + ", " + dfLine.getUnique() + ", " + dfLine.getNumberPrecision() +
                          ", '" + dfLine.getNumberScale() + "', " + dfLine.getTreatBlanksAsZeros() + ");");
                          break;*/
                    case LOOKUP:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateLookupField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', '" +
                                dfLine.getRelationshipLabel() + "', '" + dfLine.getRelationshipName() + "', '" + dfLine.getReferenceTo() +
                                "');");
                        break;
                    case NUMBER:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateNumberField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", " + dfLine.getUnique() + ", " + dfLine.getExternalID() +
                                ", '" + dfLine.getDefaultValue() + "', " + dfLine.getNumberPrecision() + ", " +
                                dfLine.getNumberScale() + ");");
                        break;
                    case PERCENT:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generatePercentField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "', " + dfLine.getNumberPrecision() + ", " +
                                dfLine.getNumberScale() + ");");
                        break;
                    case PHONE:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generatePhoneField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                        //FIXME: needs implementing...
                        /*case PICKLIST:
                          writer.println("        MetadataService.CustomField field" + fieldIndex +
                          " = generatePicklistField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                          "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                          dfLine.getRequired() + ", " + dfLine.getUnique() + ", " + dfLine.getExternalID() +
                          ", '" + dfLine.getDefaultValue() + "', " + dfLine.getNumberPrecision() + ", " +
                          dfLine.getNumberScale() + ");");
                          break;*/
                        //FIXME: implement PICKLIST_MULTI too...
                        // ROLLUP? Not sure possible...
                    case TEXT:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateTextField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getTextLength() + ", " + dfLine.getRequired() + ", " + dfLine.getUnique() + ", " +
                                dfLine.getCaseSensitive() + ", " + dfLine.getExternalID() + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                    case TEXTAREA:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateTextAreaField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                    case LONGTEXTAREA:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateLongTextAreaField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getTextLength() + ", " + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                        // RICHTEXTAREA: Not in Metadata API (?)
                        // TEXT_ENCRYPT: Not in Metadata API (?)
                    case TIME:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateTimeField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "');");
                        break;
                    case URL:
                        writer.println("        MetadataService.CustomField field" + fieldIndex +
                                " = generateURLField('" + dfLine.getObjectAPIName() + "." + dfLine.getFieldAPIName() +
                                "', '" + dfLine.getFieldLabel() + "', '" + dfLine.getFieldDescription() + "', " +
                                dfLine.getRequired() + ", '" + dfLine.getDefaultValue() + "');");
                        break;

                }
                fieldIndex++;
            }

            System.out.println("-----------------------------------------------------------------");
            System.out.println("======== [ DONE ] =========");

            createUpserterCode(fieldIndex, "field");
            createFieldSecurityCode(fieldIndex);
            createRunCode();
            writer.println("    // ======== [ Helper methods below ] =========");
            createHandleUpsertCode();
            createHandleSaveCode();
            createHandleDeleteCode();
            createGenericExceptionHandler();

            //closing brace for file
            writer.println("}");

            writer.flush();
            writer.close();

            System.out.println("");
            System.out.println("Output Apex Class CreateCustomObjects_" + currentDate + ".cls written.");

            return true;
        }
        catch (IOException e)
        {
            e.printStackTrace();
            return false;
        }

    }
}
